#!/usr/bin/env bash

vruby_version="0.1"

set -e

prog_name=$(basename $0)

# Taken from https://gist.github.com/pkuczynski/8665367
# Parses yaml file into variables, for example:
#
# foo:
#  bar: baz
#  qux: quux
#
# would become a shell variables:
# $foo_bar = baz
# $foo_qux = quux
parse_yaml() {
  local prefix=$2
  local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
  sed -ne "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
      -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
  awk -F$fs '{
    indent = length($1)/2;
    vname[indent] = $2;
    for (i in vname) {if (i > indent) {delete vname[i]}}
    if (length($3) > 0) {
       vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
       printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
    }
  }'
}

sub_help(){
  echo "Usage: $prog_name <subcommand> [options]\n"
  echo "Subcommands:"
  echo "    install   Do bar"
  echo ""
  echo "For help with each subcommand run:"
  echo "$prog_name <subcommand> -h|--help"
  echo ""
}

_install_bundler() {
  base=$1
  source "${base}/bin/activate"
  gem install --no-user-install bundler
}

sub_install(){

  to=/opt/vruby/share
  version=2.2.1
  platform=$(uname)
  url_root=http://d6r77u77i8pq3.cloudfront.net/releases

  arg="$1"

  case $arg in
    --to)
      to="$2"
      shift
      ;;
    --version)
      # TODO: Make sure this works if both --to and --version are passed
      version="$2"
      shift
      ;;
    "")
      # Suppress below warning when no args passed
      ;;
    *)
      echo -e "WARNING: Unknown option \"$arg\"\n" 1>&2
      exit 1
      ;;
  esac

  share_dir="$(dirname "${BASH_SOURCE[0]}")/../share"
  eval $(parse_yaml $share_dir/vruby/downloads.yml "downloads_")

  version_key=$(echo $version | sed 's/\./_/g')

  case $platform in
    (Linux|GNU*)
      url_key="downloads_${version_key}_linux"
      ;;
    (Darwin)
      url_key="downloads_${version_key}_osx"
      ;;
    (*)
      cat <<< "$platform is an unsupported platform. Please open an issue at https://github.com/joefiorini/vruby with the subject line \"Support for $platform\"." 1>&2
      return 1
      ;;
  esac

  ruby_url=${!url_key}

  case $ruby_url in
    ("")
      cat <<< "$version is not a supported Ruby version. Please open an issue at https://github.com/joefiorini/vruby with the subject line \"Support for Ruby $version\"." 1>&2
      return 1
      ;;
  esac

  tmp_file=/tmp/$(basename $ruby_url)
  tmp_output=/tmp/$(basename $tmp_file .tar.bz2)

  # Save previous directory so we can change back, in the event
  # that $to is passed as a relative path
  previous_dir=$(pwd)

  cd $(dirname $tmp_file)

  if [ ! -f $tmp_file ]; then
    # TODO: Use dictionary of URLs & platforms instead of hardcoding
    cat <<< "Downloading from $ruby_url"
    curl -O $ruby_url
  fi

  tar -xvf $tmp_file > /dev/null

  # sed -i.bak -e "s/^echo GEM_HOME=.*$//" $tmp_output/bin/ruby_environment
  # rm $tmp_output/bin/ruby_environment.bak

  cd $previous_dir

  cat <<< "Installing to $to"
  mkdir -p $to
  echo "Copying $tmp_output/ to $to/$version"
  cp -r $tmp_output/ $to/$version
}

sub_embed() {
  version=2.2.1
  from=/opt/vruby/share
  target_base=$1
  host_dir=$(pwd)


  while [[ $# > 1 ]]
  do
    arg="$1"

    case $arg in
      --from)
        from="$2"
        shift
        shift
        ;;
      --version)
        version="$2"
        shift
        ;;
      *)
        target_base=$1
        shift
        ;;
    esac
  done

  target_dir=$target_base/$version

  activate=$(cat <<-EOF
RUBY_VERSION=$version
RUBY_ENGINE=ruby

export RUBY_ROOT=$host_dir/$target_dir
export GEM_HOME="$host_dir/.gem/\$RUBY_ENGINE/\$RUBY_VERSION"
export GEM_PATH=\$GEM_HOME

export PATH=\$GEM_HOME/bin:$from/$version/lib/ruby/gems/$version/bin:\$RUBY_ROOT/bin:\$PATH
EOF
)

  mkdir -p $target_dir
  mkdir -p $target_base/bin
  echo "$activate" > $target_base/bin/activate
  stow -d $from -t $target_dir $version

  _install_bundler $target_base
}

subcommand=$1
case $subcommand in
  "" | "-h" | "--help")
    sub_help
    ;;
  "-v" | "--version")
    echo "vruby v${vruby_version}"
    ;;
  install)
    shift
    sub_install $@
    ;;
  *)
    sub_embed $@
    ;;
esac
